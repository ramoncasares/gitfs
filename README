Git as a filesystem: gitfs
==========================

After mounting your git repository,
but before unmounting it :),
you can browse it in parallel
on several terminals, or file browsers,
going to the mount point, be it `/mnt/fuse`.

Then, in `/mnt/fuse/` you will find a dir listing with
HEAD, all the branches, and all the tags in the repo.
And under each `/mnt/fuse/commit-ish/`,
in adition to the the commit tree,
the current dir (`.`), and its file system parent (`..`),
you will also find
one entry for each of the git parents of the commit,
as a `^` if it has only one, or
as `^1`, `^2`, and so on, if it has more than one.

To allow an easy navigation,
a path as `/mnt/fuse/master/~3/^2/pathto/glob` is
treated as `/mnt/fuse/master~3^2/pathto/glob`,
so you can go, for example, from `/mnt/fuse/HEAD` to its git grandparent
just doing twice `cd ^`, or once `cd ^^` (or `cd ^/^` or `cd ~2` or ...).

Also, in the `commit-ish` section of path `/mnt/fuse/commit-ish/pathto/glob`,
every `:` char is converted to char `/` when interfacing with git.
So path `/mnt/fuse/origin:master/` refers to git `origin/master` remote ref.

In summary, a `commit-ish` is any
`(refs :)* name (/ [~^] [~^0-9]*)*`,
and is treated as
`(refs /)* name ([~^] [~^0-9]*)*`.
This way you can fully navigate the repository
from any of its references.

The gitfs filesystem reports two extended attributes:

- `user.sha1`:   the sha1 of the tree or blob object;
- `user.commit`: the sha1 of the commit where the tree or blob object is.

The gitfs filesystem is read-only, and
the date of any object in a commit tree is the date of the commit.

If you need a writable filesystem, please use a
[unionfs](http://en.wikipedia.org/wiki/UnionFS)
filesystem on top of the gitfs mount point.


Preparing the system
--------------------

To make gitfs, first compile git, and then compile gitfs.
But, before any compiling, we have to install some packets,
and join `user` to groups `staff` and `fuse`.
Below is how I did it in a standard Debian Wheezy.

<pre>
user@PCBox:~$ su -
root@PCBox:~# apt-get install fuse libfuse-dev attr libattr1-dev \
                              libcurl4-gnutls-dev libexpat1-dev gettext zlib1g-dev libssl-dev
root@PCBox:~# adduser user staff
root@PCBox:~# adduser user fuse
root@PCBox:~# exit
</pre>

You may need to reboot, or as `root` do: `chown root:fuse /dev/fuse`.
Also, you may need to restart the shell session, doing `su user`,
for `user` to be on groups `staff` and `fuse`;
of course, after the reboot, this will also be set.


Compiling git
-------------

Now we can compile git.
Just get the sources, and do a make.

<pre>
user@PCBox:~$ cd /usr/local/src/
user@PCBox:/usr/local/src$ wget https://github.com/git/git/archive/v1.8.4.tar.gz
user@PCBox:/usr/local/src$ tar -zxf v1.8.4.tar.gz
user@PCBox:/usr/local/src$ cd git-1.8.4/
user@PCBox:/usr/local/src/git-1.8.4$ make prefix=/usr/local all
user@PCBox:/usr/local/src/git-1.8.4$ cd
</pre>

You may want to install the just compiled git, although it is not needed.
Should you wanted to install it, please do `make prefix=/usr/local install`.


Compiling gitfs
---------------

Just get the sources, and do a make.

<pre>
user@PCBox:~$ cd /usr/local/src/
user@PCBox:/usr/local/src$ wget https://github.com/ramoncasares/gitfs/archive/v0.2.tar.gz
user@PCBox:/usr/local/src$ tar -zxf v0.2.tar.gz
user@PCBox:/usr/local/src$ cd gitfs-0.2/
user@PCBox:/usr/local/src/gitfs-0.2$ make
user@PCBox:/usr/local/src/gitfs-0.2$ cd
</pre>

The gitfs executable is: `/usr/local/src/gitfs-0.2/gitfs`.


Mounting a git repo as a filesystem
-----------------------------------

This is optional, but
to be able to mount git as an ordinary `user`,
you need to add yourself to group `fuse` (already done), and
prepare a mount point.
We will prepare `/mnt/fuse` to mount fuse filesystems.

<pre>
user@PCBox:~$ su -
root@PCBox:~# cd /mnt
root@PCBox:/mnt# mkdir fuse
root@PCBox:/mnt# chown root:fuse fuse
root@PCBox:/mnt# chmod 775 fuse
root@PCBox:/mnt# exit
</pre>

Now we will clone the gitfs repo from the GitHub.
This is completelly optional,
but illustrates how to clone the repo,
and we will use it to show the use of gitfs.
We will put the repo in dir `~/git/gitfs/`.

<pre>
user@PCBox:~$ mkdir git
user@PCBox:~$ cd git/
user@PCBox:~/git$ git clone https://github.com/ramoncasares/gitfs.git
user@PCBox:~/git$ cd
</pre>

To mount the just cloned git repo,
in the just created mount point,
you have to go to the dir where your repo is,
and call the gitfs executable from there.

Example session
---------------

<pre>
user@PCBox:~$ cd git/gitfs/
user@PCBox:~/git/gitfs$ /usr/local/src/gitfs-0.2/gitfs /mnt/fuse -f &
user@PCBox:~/git/gitfs$ cd /mnt/fuse
user@PCBox:/mnt/fuse$ ls -la
total 4
dr-xr-xr-x+  2 root root    0 sep  5 19:48 .
drwxr-xr-x  14 root root 4096 ago 29 18:09 ..
dr-xr-xr-x+  2 root root    0 sep  1 08:25 github:HEAD
dr-xr-xr-x+  2 root root    0 sep  1 08:25 github:master
dr-xr-xr-x+  2 root root    0 jul 20  2009 github:original
dr-xr-xr-x+  2 root root    0 sep  4  2009 github:temp
dr-xr-xr-x+  2 root root    0 sep  5 19:38 HEAD
dr-xr-xr-x+  2 root root    0 sep  5 19:38 master
dr-xr-xr-x+  2 root root    0 sep  1 08:25 origin:master
dr-xr-xr-x+  2 root root    0 sep  1 08:25 qratos:master
dr-xr-xr-x+  2 root root    0 ago 31 10:39 v0.1
dr-xr-xr-x+  2 root root    0 ago 31 11:39 v0.1.1
dr-xr-xr-x+  2 root root    0 sep  5 20:45 v0.2
user@PCBox:/mnt/fuse$ cd v0.1
user@PCBox:/mnt/fuse/v0.1$ ls -la
total 0
dr-xr-xr-x+ 2 root root    0 ago 29 20:10 ^
dr-xr-xr-x+ 2 root root    0 ago 31 10:39 .
dr-xr-xr-x+ 2 root root    0 sep  5 19:48 ..
-r--r--r--+ 1 root root 9093 ago 31 10:39 main.c
-r--r--r--+ 1 root root  430 ago 31 10:39 Makefile
-r--r--r--+ 1 root root 5192 ago 31 10:39 README
user@PCBox:/mnt/fuse/v0.1$ cd ^
user@PCBox:/mnt/fuse/v0.1/^$ ls
total 0
^  main.c  Makefile  README
user@PCBox:/mnt/fuse/v0.1/^$ head -6 README
Making gitfs
============

To compile gitfs, first get git and gitfs sources,
then compile git, and finally compile gitfs.

user@PCBox:/mnt/fuse/v0.1/^$ getfattr -d README
# file: README
user.commit="d45be49c223d47c4da8ba7f487b3e7c6ccd8298f"
user.sha1="53e4aff7e0b447202fc3b8c5bd9dbbbfe6c44af3"

user@PCBox:/mnt/fuse/v0.1/^$ getfattr -d .
# file: .
user.commit="d45be49c223d47c4da8ba7f487b3e7c6ccd8298f"
user.sha1="73f8c00cd7d5acc7797be8a127f5be935fbe3728"

user@PCBox:/mnt/fuse/v0.1/^$ cd
user@PCBox:~$ fusermount -u /mnt/fuse
</pre>


Aknowledgements
---------------

This is a fork of
[wereHamster-gitfs](https://github.com/wereHamster/gitfs),
by Tomas "wereHamster" Carnecky.
Branch `original` of Tomas' repo contains
`gitfs` sources by Mitchell Blank Jr,
the inspiration for our `gitfs`.
