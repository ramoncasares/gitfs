Making gitfs
============

To compile gitfs, first get git and gitfs sources,
then compile git, and finally compile gitfs.


Getting the sources
-------------------

Getting the sources is easy if you know where they are.
We will put git sources in `/usr/local/src` and
gitfs sources inside `user` home, in `/home/user/gitfs`.

<pre>
user@PCBox:~$ su -
root@PCBox:~# cd /usr/local/src/
root@PCBox:/usr/local/src# wget http://code.google.com/p/git-core/downloads/git-1.8.3.4.tar.gz
root@PCBox:/usr/local/src# exit
user@PCBox:~$ cd
user@PCBox:~$ git clone https://github.com/ramoncasares/gitfs.git
</pre>


Compiling git
-------------

Before compiling git, we have
to install some packets and 
apply a patch to the git sources.

Below is how I did it in a standard Debian Wheezy.

<pre>
user@PCBox:~$ su -
root@PCBox:~# apt-get install libfuse-dev libcurl4-gnutls-dev libexpat1-dev gettext zlib1g-dev libssl-dev
root@PCBox:~# cd /usr/local/src/
root@PCBox:/usr/local/src# tar -zxf git-1.8.3.4.tar.gz
root@PCBox:/usr/local/src# cd git-1.8.3.4/
root@PCBox:/usr/local/src/git-1.8.3.4# patch -p1 < /home/user/gitfs/gitfs.patch
root@PCBox:/usr/local/src/git-1.8.3.4# make prefix=/usr/local all
root@PCBox:/usr/local/src/git-1.8.3.4# exit
</pre>


Compiling gitfs
---------------

Just do a make:

<pre>
user@PCBox:~$ cd gitfs
user@PCBox:~/gitfs$ make
</pre>


Mounting a git repo as a filesystem
-----------------------------------

This is optional, but
to be able to mount git as an ordinary `user`,
you need to add yourself to group `fuse`, and
prepare a mount point.

<pre>
root@PCBox:~# adduser user fuse
root@PCBox:~# cd /mnt
root@PCBox:/mnt# mkdir fuse
root@PCBox:/mnt# chown root:fuse fuse
root@PCBox:/mnt# chmod 775 fuse
</pre>

To mount the just cloned git repo in
the just created mount point `/mnt/fuse`, do:

<pre>
user@PCBox:~/gitfs$ ./gitfs /mnt/fuse -f
.
Now in /mnt/tmp/ you have the tree pointed to by HEAD,
   and under /mnt/tmp/.refs/ any git object. 
   For example, to see an old version, you could do:
   cat /mnt/fuse/.refs/master~5/Makefile
.
user@PCBox:~/gitfs$ ^C
</pre>


How I made the patch
--------------------

I made the patch this way.

<pre>
papa@CoolBox:~/gitfs$ mkdir git-patch
papa@CoolBox:~/gitfs$ ln -s /usr/local/src/git-1.8.3.4
papa@CoolBox:~/gitfs$ cp git-1.8.3.4/cache.h git-patch/
papa@CoolBox:~/gitfs$ cp git-1.8.3.4/sha1_name.c git-patch/
papa@CoolBox:~/gitfs$ edit git-patch/cache.h
   Add line 822 in cache.h
   extern int get_sha1_1(const char *name, int len, unsigned char *sha1, unsigned lookup_flags);
papa@CoolBox:~/gitfs$ edit git-patch/sha1_name.c
   Delete word static in sha1_name.c lines 433, 738
   int get_sha1_1(const char *name, int len, unsigned char *sha1, unsigned lookup_flags)
papa@CoolBox:~/gitfs$ diff -au git-1.8.3.4/ git-patch/ | grep -v '^Only'  > gitfs.patch
</pre>
